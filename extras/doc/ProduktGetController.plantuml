' Copyright (C) 2019 - present Juergen Zimmermann, Hochschule Karlsruhe
'
' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <https://www.gnu.org/licenses/>.
@startuml VereinGetController

skinparam classAttributeIconSize 0

package org.springframework {
    package web.bind.annotation {
        interface "@RestController" as RestController
        interface "@RequestMapping" as RequestMapping
        interface "@PathVariable" as PathVariable
        interface "@RequestParam" as RequestParam
        interface "@ExceptionHandler" as ExceptionHandler
        interface "@ResponseStatus" as ResponseStatus
        interface "@GetMapping" as GetMapping
    }

    package hateoas {
        class CollectionModel<E>
    }
}

package jakarta.servlet.http {
    interface HttpServletRequest
}

package java.util {
    interface Map<K,V>
    class UUID
}

package com.acme.verein {
    package service {
        class VereinReadService << control >> << @Service >>
        class NotFoundException
    }

    package rest #DDDDDD {
        class VereinModel <<entity>>

        class VereinGetController << boundary >> << @RestController >> << @RequestMapping >> {
            + @GetMapping findById(@PathVariable id: UUID, request: HttpServletRequest): VereinModel
            + @GetMapping find(@RequestParam queryParams: Map<String, String>, request: HttpServletRequest): CollectionModel<VereinModel>
            + @GetMapping findbyNamenPrefix(@PathVariable prefix: String): String
            + @ExceptionHandler onNotFound(ex: NotFoundException): void
        }

        VereinGetController o--> "1" VereinReadService : service
        VereinGetController ..> VereinModel

        VereinGetController .left.> HttpServletRequest

        VereinGetController .up.> RequestMapping
        VereinGetController .up.> RestController
        VereinGetController .up.> CollectionModel
        VereinGetController .up.> PathVariable
        VereinGetController .up.> RequestParam
        VereinGetController .up.> ResponseStatus
        VereinGetController .up.> ExceptionHandler
        VereinGetController .up.> GetMapping

        VereinGetController .down.> UUID
        VereinGetController .down.> Map

        VereinModel .[hidden].> VereinReadService
    }
}

hide empty members

footer (c) Juergen Zimmermann

@enduml
